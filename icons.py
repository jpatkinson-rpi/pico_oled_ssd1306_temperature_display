# Code generated by c_to_python_font.py.
# Char set: ABCDEF
# Cmd: c_to_python_font.py icon_fonts/filenames.txt icons.py
version = '0.10'

def height():
    return 19

def baseline():
    return 19

def max_width():
    return 19

def hmap():
    return True

def reverse():
    return True

def monospaced():
    return False

def min_ch():
    return 65

def max_ch():
    return 70

_font =\
b'\x13\x00\x01\x00\x04\x02\x00\x02\x04\x00\x01\x08\x80\x00\x10\x40'\
b'\x00\x20\x20\x00\x40\x10\x00\x80\x08\x00\x00\x05\x00\x00\x02\x00'\
b'\x00\x05\x00\x80\x08\x00\x40\x10\x00\x20\x20\x00\x10\x40\x00\x08'\
b'\x80\x00\x04\x00\x01\x02\x00\x02\x01\x00\x04\x13\x00\x00\x00\x00'\
b'\x06\x00\x00\x1e\x00\x00\x7e\x00\x00\xfe\x01\x00\xfe\x07\x00\xfe'\
b'\x1f\x00\xfe\x7f\x00\xfe\xff\x01\xfe\xff\x07\xfe\xff\x01\xfe\x7f'\
b'\x00\xfe\x1f\x00\xfe\x07\x00\xfe\x01\x00\x7e\x00\x00\x1e\x00\x00'\
b'\x06\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\xfc\xff'\
b'\x00\xfc\xff\x00\xfc\xff\x00\xfc\xff\x00\xfc\xff\x00\xfc\xff\x00'\
b'\xfc\xff\x00\xfc\xff\x00\xfc\xff\x00\xfc\xff\x00\xfc\xff\x00\xfc'\
b'\xff\x00\xfc\xff\x00\xfc\xff\x00\xfc\xff\x00\x00\x00\x00\x00\x00'\
b'\x00\x13\x00\x00\x00\x00\x00\x00\x00\xf8\xf8\x00\xf8\xf8\x00\xf8'\
b'\xf8\x00\xf8\xf8\x00\xf8\xf8\x00\xf8\xf8\x00\xf8\xf8\x00\xf8\xf8'\
b'\x00\xf8\xf8\x00\xf8\xf8\x00\xf8\xf8\x00\xf8\xf8\x00\xf8\xf8\x00'\
b'\xf8\xf8\x00\xf8\xf8\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x02\x04\x80\x03\x06\xc0\x83\x07'\
b'\xf0\xc3\x07\xf8\xe3\x07\xfe\xfb\x07\xff\xff\x07\xfe\xfb\x07\xf8'\
b'\xf3\x07\xf0\xc3\x07\xc0\x83\x07\x80\x03\x07\x00\x02\x04\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x01\x02\x00\x03\x0e\x00\x0f\x1e\x00\x1f\x7e\x00\x3f\xfe'\
b'\x00\xff\xfe\x03\xff\xff\x07\xff\xff\x07\xff\xfe\x03\x7f\xfe\x00'\
b'\x1f\x3e\x00\x0f\x0e\x00\x07\x02\x00\x01\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x13\x00\x00\x02\x00\xc0\x1d\x00\x20\x20\x00\x20\x20\x00'\
b'\x20\x20\x00\x10\x40\x00\x20\x20\x00\x20\x20\x00\x20\x20\x00\xc0'\
b'\x1d\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

_index =\
b'\x00\x00\x3b\x00\x76\x00\xb1\x00\xec\x00\x27\x01\x62\x01'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 65 + 1) if oc >= 65 and oc <= 70 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 19
    return _mvfont[doff + 2:next_offs], 19, width


